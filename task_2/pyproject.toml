[tool.poetry]
name = "task-2"
version = "0.1.0"
description = ""
authors = ["Roman Solomatin <36135455+Samoed@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "task_2"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.95.0"
uvicorn = "^0.21.1"
sqlalchemy-utils = "^0.40.0"
sqlalchemy = "^2.0.7"
alembic = "^1.10.2"
pydantic = {extras = ["dotenv"], version = "^1.10.7"}
asyncpg = "^0.27.0"
psycopg2 = "^2.9.5"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.1.1"
pyupgrade = "^3.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

# https://github.com/tiangolo/sqlmodel/blob/main/pyproject.toml
[tool.mypy]
python_version = "3.10"
# --strict
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
plugins = [
    "sqlalchemy.ext.mypy.plugin",
    "pydantic.mypy",
]
ignore_missing_imports = false
# --strict end
exclude = [
    "tests/"
]

[[tool.mypy.overrides]]
module = [
    "sqlalchemy_utils",
    "nltk",
    "pandas",
    "schedule",

]
ignore_missing_imports = true

[tool.black]
line-length = 120
target-version = ['py310']
preview = true
exclude = '''
/(
    .git
  | .venv
  | notebooks
)/
'''

[tool.coverage.run]
source = ["app"]


[tool.pytest.ini_options]
asyncio_mode = "auto"
